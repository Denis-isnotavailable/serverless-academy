const axios = require('axios');
const NodeCache = require( "node-cache" );
const myCache = new NodeCache({useClones: false});

const getWeatherForecast = async (lat, lon, API_KEY, interval = 3) => {
    try {
        const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`);
        const increment = interval === 3 ? 1 : 2;
        let res = '';

        for (let i = 0; i < 10; i += increment) {
            const { dt_txt, main, weather } = data.list[i];
            res += `
                Date: ${dt_txt}
                Temperature: ${Math.round(main.temp - 273.15)}Â°C
                Humidity: ${main.humidity}%
                Weather: ${weather[0].main} / ${weather[0].description}                
            `                       
        }

        return res;

    } catch (error) {
        console.log(error);
    }
}


const getMonobankDataOrCache = async () => {
    let data = myCache.get("monobankData");

    if (!data) {
        data = await axios.get("https://api.monobank.ua/bank/currency")
        myCache.set("monobankData", data, 61000);
    }   

    return data;
}


const getEuro = async () => {
    try {
        const { data } = await axios.get(`https://api.privatbank.ua/p24api/pubinfo?exchange&coursid=5`);
        const monobankData = await getMonobankDataOrCache();
        
        return `
            PrivatBank (EUR)
            Purchase: ${data[0].buy}
            Sale: ${data[0].sale}

            MonoBank (EUR)
            Purchase: ${monobankData.data[1].rateBuy}
            Sale: ${monobankData.data[1].rateSell}
        `;

    } catch (error) {
        console.log(error);
    }
}

const getUSDollar = async () => {
    try {
        const { data } = await axios.get(`https://api.privatbank.ua/p24api/pubinfo?exchange&coursid=5`);
        const monobankData = await getMonobankDataOrCache();

        return `
            PrivatBank (USD)
            Purchase: ${data[1].buy}
            Sale: ${data[1].sale}

            MonoBank (USD)
            Purchase: ${monobankData.data[0].rateBuy}
            Sale: ${monobankData.data[0].rateSell}
        `;
    } catch (error) {
        console.log(error);
    }
}

module.exports = {
    getWeatherForecast,
    getEuro,
    getUSDollar
};